Index: kafka-stream/src/test/scala/org/esgi/project/streaming/StreamProcessingSpec.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.esgi.project.streaming\r\n\r\nimport io.github.azhur.kafka.serde.PlayJsonSupport\r\nimport org.apache.kafka.streams.{TestInputTopic, TopologyTestDriver}\r\nimport org.apache.kafka.streams.scala.serialization.Serdes\r\nimport org.apache.kafka.streams.state.KeyValueStore\r\nimport org.apache.kafka.streams.test.TestRecord\r\nimport org.esgi.project.streaming.models.{Likes, Views, MeanScoreForFilm}\r\nimport org.scalatest.funsuite.AnyFunSuite\r\n\r\nimport java.util.{Properties, UUID}\r\nimport scala.jdk.CollectionConverters._\r\n\r\nclass StreamProcessingSpec extends AnyFunSuite with PlayJsonSupport {\r\n\r\n  test(\"Views and Likes Processing\") {\r\n    // Generate a unique application name\r\n    val uniqueAppName = s\"web-events-stream-app-${UUID.randomUUID().toString}\"\r\n\r\n    // Initialize the TopologyTestDriver\r\n    val testDriver = new TopologyTestDriver(\r\n      StreamProcessing.builder.build(),\r\n      StreamProcessing.buildProperties(Some(uniqueAppName))\r\n    )\r\n\r\n    // Create TestInputTopic instances for 'Views' and 'Likes'\r\n    val viewsTopic: TestInputTopic[String, Views] = testDriver.createInputTopic(\r\n      StreamProcessing.viewsTopicName,\r\n      Serdes.stringSerde.serializer(),\r\n      toSerializer\r\n    )\r\n\r\n    val likesTopic: TestInputTopic[String, Likes] = testDriver.createInputTopic(\r\n      StreamProcessing.likesTopicName,\r\n      Serdes.stringSerde.serializer(),\r\n      toSerializer\r\n    )\r\n\r\n    viewsTopic.pipeInput(\"1\", new Views(1, \"Movie A\", \"start_only\"))\r\n    likesTopic.pipeInput(\"1\", new Likes(1, 5.0))\r\n\r\n    val viewsCountStore: KeyValueStore[String, Long] = testDriver.getKeyValueStore[String, Long](StreamProcessing.TotalViewsPerFilmStoreName)\r\n    val meanScoreStore: KeyValueStore[Long, MeanScoreForFilm] = testDriver.getKeyValueStore[Long, MeanScoreForFilm](StreamProcessing.MeanScorePerFilmStoreName)\r\n\r\n    assert(viewsCountStore.get(\"Movie A\") === 1)\r\n\r\n    val meanScoreForFilm = meanScoreStore.get(1L)\r\n    assert(meanScoreForFilm.sum === 5.0)\r\n    assert(meanScoreForFilm.count === 1.0)\r\n    assert(meanScoreForFilm.meanScore === 5.0)\r\n    assert(meanScoreForFilm.title === \"Movie A\")\r\n\r\n    testDriver.close()\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/kafka-stream/src/test/scala/org/esgi/project/streaming/StreamProcessingSpec.scala b/kafka-stream/src/test/scala/org/esgi/project/streaming/StreamProcessingSpec.scala
--- a/kafka-stream/src/test/scala/org/esgi/project/streaming/StreamProcessingSpec.scala	
+++ b/kafka-stream/src/test/scala/org/esgi/project/streaming/StreamProcessingSpec.scala	
@@ -14,16 +14,13 @@
 class StreamProcessingSpec extends AnyFunSuite with PlayJsonSupport {
 
   test("Views and Likes Processing") {
-    // Generate a unique application name
     val uniqueAppName = s"web-events-stream-app-${UUID.randomUUID().toString}"
 
-    // Initialize the TopologyTestDriver
     val testDriver = new TopologyTestDriver(
       StreamProcessing.builder.build(),
       StreamProcessing.buildProperties(Some(uniqueAppName))
     )
 
-    // Create TestInputTopic instances for 'Views' and 'Likes'
     val viewsTopic: TestInputTopic[String, Views] = testDriver.createInputTopic(
       StreamProcessing.viewsTopicName,
       Serdes.stringSerde.serializer(),
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"6cfd50d9-161e-4751-9d44-44a10da0db38\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/kafka-stream/src/main/scala/org/esgi/project/streaming/StreamProcessing.scala\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/kafka-stream/src/main/scala/org/esgi/project/streaming/StreamProcessing.scala\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/kafka-stream/src/test/scala/org/esgi/project/streaming/StreamProcessingSpec.scala\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/kafka-stream/src/test/scala/org/esgi/project/streaming/StreamProcessingSpec.scala\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Scala Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"KubernetesApiPersistence\">{}</component>\r\n  <component name=\"KubernetesApiProvider\">{\r\n  &quot;isMigrated&quot;: true\r\n}</component>\r\n  <component name=\"ProjectCodeStyleSettingsMigration\">\r\n    <option name=\"version\" value=\"2\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 3\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2jNFrYGFI3HLmFhJpeBfQhWuaaM\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.Java Main.executor\": \"Run\",\r\n    \"Application.Main.executor\": \"Run\",\r\n    \"Application.Scala Main.executor\": \"Run\",\r\n    \"Attach to process.pid 14348.executor\": \"ProcessAttachDebug\",\r\n    \"Docker.docker-compose.yml: Compose Deployment.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"ScalaTest.StreamProcessingSpec.Views and Likes Processing.executor\": \"Run\",\r\n    \"ScalaTest.StreamProcessingSpec.executor\": \"Run\",\r\n    \"git-widget-placeholder\": \"main\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/nadim/Desktop/esgi/M2_SEM2/kafka_films\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"settings.editor.selected.configurable\": \"preferences.pluginManager\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\"ScalaTest.StreamProcessingSpec\">\r\n    <configuration name=\"StreamProcessingSpec\" type=\"ScalaTestRunConfiguration\" factoryName=\"ScalaTest\" temporary=\"true\" nameIsGenerated=\"true\" show_console_on_std_err=\"false\" show_console_on_std_out=\"false\">\r\n      <module name=\"kafka-streams-solution\" />\r\n      <option name=\"VMParameters\" value=\"\" />\r\n      <option name=\"allowRunningInParallel\" value=\"false\" />\r\n      <option name=\"alternativeJrePath\" />\r\n      <option name=\"alternativeJrePathEnabled\" value=\"false\" />\r\n      <option name=\"classpathModifications\">\r\n        <list />\r\n      </option>\r\n      <option name=\"envs\">\r\n        <map />\r\n      </option>\r\n      <option name=\"passParentEnvs\" value=\"true\" />\r\n      <option name=\"programParameters\" value=\"\" />\r\n      <option name=\"projectPathOnTarget\" />\r\n      <option name=\"selectedOptions\">\r\n        <list />\r\n      </option>\r\n      <option name=\"testKind\" value=\"Class\" />\r\n      <option name=\"workingDirectory\" value=\"C:\\Users\\nadim\\Desktop\\esgi\\M2_SEM2\\kafka_films\" />\r\n      <option name=\"testClassPath\" value=\"org.esgi.project.streaming.StreamProcessingSpec\" />\r\n      <option name=\"workingDirectory\" value=\"C:\\Users\\nadim\\Desktop\\esgi\\M2_SEM2\\kafka_films\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"StreamProcessingSpec.Views and Likes Processing\" type=\"ScalaTestRunConfiguration\" factoryName=\"ScalaTest\" temporary=\"true\" nameIsGenerated=\"true\" show_console_on_std_err=\"false\" show_console_on_std_out=\"false\">\r\n      <module name=\"kafka-streams-solution\" />\r\n      <option name=\"VMParameters\" value=\"\" />\r\n      <option name=\"allowRunningInParallel\" value=\"false\" />\r\n      <option name=\"alternativeJrePath\" />\r\n      <option name=\"alternativeJrePathEnabled\" value=\"false\" />\r\n      <option name=\"classpathModifications\">\r\n        <list />\r\n      </option>\r\n      <option name=\"envs\">\r\n        <map />\r\n      </option>\r\n      <option name=\"passParentEnvs\" value=\"true\" />\r\n      <option name=\"programParameters\" value=\"\" />\r\n      <option name=\"projectPathOnTarget\" />\r\n      <option name=\"selectedOptions\">\r\n        <list />\r\n      </option>\r\n      <option name=\"testKind\" value=\"Test name\" />\r\n      <option name=\"workingDirectory\" value=\"C:\\Users\\nadim\\Desktop\\esgi\\M2_SEM2\\kafka_films\" />\r\n      <option name=\"testClassPath\" value=\"org.esgi.project.streaming.StreamProcessingSpec\" />\r\n      <option name=\"testName\" value=\"Views and Likes Processing\" />\r\n      <option name=\"workingDirectory\" value=\"C:\\Users\\nadim\\Desktop\\esgi\\M2_SEM2\\kafka_films\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"docker-deploy\" factoryName=\"docker-compose.yml\" temporary=\"true\">\r\n      <deployment type=\"docker-compose.yml\">\r\n        <settings />\r\n      </deployment>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"docker-compose.yml: Compose Deployment\" type=\"docker-deploy\" factoryName=\"docker-compose.yml\" temporary=\"true\" server-name=\"Docker\">\r\n      <deployment type=\"docker-compose.yml\">\r\n        <settings>\r\n          <option name=\"sourceFilePath\" value=\"docker-compose.yml\" />\r\n        </settings>\r\n      </deployment>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"ScalaTest.StreamProcessingSpec\" />\r\n        <item itemvalue=\"ScalaTest.StreamProcessingSpec.Views and Likes Processing\" />\r\n        <item itemvalue=\"Docker.docker-compose.yml: Compose Deployment\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9f38398b9061-39b83d9b5494-intellij.indexing.shared.core-IU-241.18034.62\" />\r\n        <option value=\"bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-IU-241.18034.62\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"6cfd50d9-161e-4751-9d44-44a10da0db38\" name=\"Changes\" comment=\"\" />\r\n      <created>1721219826614</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1721219826614</updated>\r\n      <workItem from=\"1721291270670\" duration=\"126000\" />\r\n      <workItem from=\"1721291413498\" duration=\"8496000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"org.apache.kafka.common.errors.SerializationException\" package=\"org.apache.kafka.common.errors\" />\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -6,8 +6,6 @@
   <component name="ChangeListManager">
     <list default="true" id="6cfd50d9-161e-4751-9d44-44a10da0db38" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/kafka-stream/src/main/scala/org/esgi/project/streaming/StreamProcessing.scala" beforeDir="false" afterPath="$PROJECT_DIR$/kafka-stream/src/main/scala/org/esgi/project/streaming/StreamProcessing.scala" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/kafka-stream/src/test/scala/org/esgi/project/streaming/StreamProcessingSpec.scala" beforeDir="false" afterPath="$PROJECT_DIR$/kafka-stream/src/test/scala/org/esgi/project/streaming/StreamProcessingSpec.scala" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -67,7 +65,7 @@
     "vue.rearranger.settings.migration": "true"
   }
 }]]></component>
-  <component name="RunManager" selected="ScalaTest.StreamProcessingSpec">
+  <component name="RunManager" selected="Application.Scala Main">
     <configuration name="StreamProcessingSpec" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
       <module name="kafka-streams-solution" />
       <option name="VMParameters" value="" />
@@ -160,7 +158,7 @@
       <option name="presentableId" value="Default" />
       <updated>1721219826614</updated>
       <workItem from="1721291270670" duration="126000" />
-      <workItem from="1721291413498" duration="8496000" />
+      <workItem from="1721291413498" duration="9300000" />
     </task>
     <servers />
   </component>
